I: Steps of building your own OS:
1) Physical Memory Management 
Data Structure: Free list(link list)
Functions: Physical Page Allocation/free
2) Virtual Memory Management
Data Structure: Page Table, VMA
Functions: Virtual Page Allocation/free, Page Privilege Management (Writable/Executable/?)?basis for building mprotect() syscall, heap memory management, kernel malloc, ? 
3) Process Management
Data Structure: PCB, MM_struct, task_struct
Functions: fork(), ?
4) Scheduler
Data Structure: 
Functions: 
5) Debugging, perhaps file system

II: Schedule:
1) Week 7: 1)  *Oct 4 ? 10 is Week 7(start from Sunday)
Junco: Physical memory
Qingqing, Bo: Requirement analysis and detailed design of virtual memory.
2) Week 8-9: 2)
3) Week 10-11: 3)
4) Week 12-13: 4)
5) Week 14-15: 5)  *Nov 22 ? 28 is Week 14, Thanks giving on Nov 26

III: Meeting plan:
1) Tue, Oct 12: 
Finish requirement analysis of physical and virtual memory, resolve problems
2) Fri, Oct 15:
Finish coding physical memory
Finish detailed design of virtual memory, start to code virtual memory

IV: Tips:
1) The task may be far more complicate then you think about, so please always start as early as possible 
2) Good steps of building each module:
Requirement analysis(reading book, source code, ?)
Detailed design: data structure, functions, ?
Coding
Unit testing by coder and others
Integration Testing
3) Work in a pipeline manner may speed up our project(while member A is coding physical memory, member B should start requirement analysis of virtual memory)
4) More communication: Whenever get stuck, ask for help; whenever find good tools, share; whenever make progress, deliver
5) You don?t have to know everything before make your hand dirty
