Member                  SBUID:Junao Wang 		110077822Bo Feng                 110533595Qingqing Cao            110452148Our target: Preemptive OS — 70 ptsRing-3 Processes which cannot access kernel data. COW fork, auto-growing stack, demand paging heap, SEGV handling (we didn’t implement exception table for validating parameters of syscalls)Implemented 23 fast system calls via SYSCALL/SYSRET. System call handler only saves callee-saved registers for the sake of speed.Preemptive scheduling schdules every 0.25 second.Idle kernel thread halts the CPU whenever there is no other process/kernel thread to run.Init process, which is created by idle thread, returns to ring3, then forks a child process to execute the shell and itself waits for the shell to return. When the shell process exits, it will fork a shell again. This guarantees that the OS will not hang when shell exits unexpectedly.